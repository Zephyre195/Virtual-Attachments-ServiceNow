<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_376096_va.ConfigUtil</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>ConfigUtil</name>
        <script><![CDATA[/* global global */
/* global gs, Class, GlideRecord, GlideRecordSecure, GlideScopedEvaluator, GlideSysAttachment */
/* eslint no-undef: "error" */
var ConfigUtil = Class.create();
ConfigUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	generate: function (table, sys_id, new_record, formatter) {
		if (this.getName() == 'generate') {
			table = this.getParameter('table');
			sys_id = this.getParameter('sys_id');
			new_record = this.getParameter('new_record') == 'true';
		}
		
		var config = {
			translations: {},
			enabled: gs.getProperty('x_376096_va.virtual_attachments.enabled') === 'true',
			table: table,
			sys_id: sys_id,
			new_record: new_record,
			formatter: !!formatter
		};
		
		if (config.enabled) {
			config.translations['Add Virtual Attachment'] = gs.getMessage('Add Virtual Attachment');
			
			var mode = gs.getProperty('x_376096_va.virtual_attachments.mode');
			if (mode === 'global') {
				// load attachments
			} else if (mode === 'tables') {
				var tables = gs.getProperty('x_376096_va.virtual_attachments.tables') || '';
				if (table) {
					config.enabled = tables.indexOf(table) > -1;
				}
			} else if (mode === 'script') {
				if (table && sys_id) {
					var propertyGr = new GlideRecord('sys_properties');
					propertyGr.addQuery('name', 'x_376096_va.virtual_attachments.script');
					propertyGr.setLimit(1);
					propertyGr.query();
					if (propertyGr.next()) {
						var gse = new GlideScopedEvaluator();
						var res = gse.evaluateScript(propertyGr, 'value', {
							table: table,
							sys_id: sys_id,
							new_record: new_record
						});
						
						config.enabled = !!res;
					} else {
						config.enabled = false;
					}
				} else {
					config.enabled = false;
				}
			} else if (mode === 'formatter') {
				config.enabled = !!formatter;
			} else {
				config.enabled = false;
			}
		}
		
		if (config.enabled) {
			config.attachments = {};
			
			var vattGr = new GlideRecordSecure('x_376096_va_virtual_attachment');
			vattGr.addJoinQuery('sys_attachment', 'attachment', 'sys_id')
				.addCondition('table_name', table)
				.addCondition('table_sys_id', sys_id);
			vattGr.query();
			while (vattGr.next()) {
				config.attachments[vattGr.getValue('attachment')] = {
					virtual: true,
					url: vattGr.url.toString()
				};
			}
		}
		
		if (this.getName() == 'generate') {
			return JSON.stringify(config);
		}
		
		return config;
	},

    type: 'ConfigUtil'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-01 09:52:41</sys_created_on>
        <sys_id>bb7bb929970d11102f77b4b3f153afde</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>ConfigUtil</sys_name>
        <sys_package display_value="Virtual Attachments" source="x_376096_va">ccd819ed974911102f77b4b3f153af19</sys_package>
        <sys_policy/>
        <sys_scope display_value="Virtual Attachments">ccd819ed974911102f77b4b3f153af19</sys_scope>
        <sys_update_name>sys_script_include_bb7bb929970d11102f77b4b3f153afde</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-23 19:19:16</sys_updated_on>
    </sys_script_include>
</record_update>
